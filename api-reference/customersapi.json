{
  "openapi": "3.0.1",
  "info": {
    "title": "Autumn API",
    "description": "API to interact with Autumn",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.useautumn.com/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": ["Authorization"]
    }
  ],
  "paths": {
    "/customers/{customer_id}": {
      "get": {
        "summary": "Get customer details",
        "description": "Retrieve detailed information about a specific customer including their subscriptions, add-ons, and entitlements",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the customer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object",
                      "description": "Additional customer details",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the customer"
                        },
                        "name": {
                          "type": "string",
                          "description": "Customer's username or display name"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "Customer's email address"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "Unique fingerprint for the customer"
                        },
                        "created_at": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Timestamp of customer creation in milliseconds since epoch"
                        },
                        "env": {
                          "type": "string",
                          "description": "Environment the customer belongs to"
                        },
                        "processor": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Payment processor's customer ID"
                            },
                            "type": {
                              "type": "string",
                              "description": "Payment processor type (e.g., stripe)"
                            }
                          }
                        }
                      }
                    },
                    "products": {
                      "type": "array",
                      "description": "List of active products for the customer",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "add_ons": {
                      "type": "array",
                      "description": "List of active add-ons for the customer",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "entitlements": {
                      "type": "array",
                      "description": "List of active entitlements for the customer",
                      "items": {
                        "$ref": "#/components/schemas/Entitlement"
                      }
                    },
                    "invoices": {
                      "type": "array",
                      "description": "List of past invoices the customer has paid",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the product"
          },
          "name": {
            "type": "string",
            "description": "Display name of the product"
          },
          "group": {
            "type": "string",
            "description": "Product grouping category"
          },
          "status": {
            "type": "string",
            "enum": ["active"],
            "description": "Current status of the product subscription. We only return active products."
          },
          "created_at": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of product creation in milliseconds since epoch"
          },
          "canceled_at": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "description": "Timestamp of cancellation, if applicable"
          },
          "processor": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Payment processor type"
              },
              "subscription_id": {
                "type": "string",
                "nullable": true,
                "description": "Payment processor's subscription ID"
              }
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "Price amount in the default currency"
                },
                "interval": {
                  "type": "string",
                  "enum": ["month", "year"],
                  "description": "Billing interval for the price"
                }
              }
            }
          }
        }
      },
      "Entitlement": {
        "type": "object",
        "properties": {
          "feature_id": {
            "type": "string",
            "description": "Unique identifier for the feature"
          },
          "interval": {
            "type": "string",
            "description": "Time interval for the entitlement"
          },
          "balance": {
            "type": "integer",
            "nullable": true,
            "description": "Remaining balance of the entitlement"
          },
          "total": {
            "type": "integer",
            "nullable": true,
            "description": "Total allocation of the entitlement"
          },
          "unlimited": {
            "type": "boolean",
            "description": "Whether the entitlement has unlimited usage"
          },
          "used": {
            "type": "integer",
            "description": "Amount of the entitlement that has been used"
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "product_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of product IDs included in this invoice"
          },
          "stripe_id": {
            "type": "string",
            "description": "Stripe invoice ID"
          },
          "status": {
            "type": "string",
            "enum": ["paid", "unpaid", "void"],
            "description": "Payment status of the invoice"
          },
          "total": {
            "type": "number",
            "description": "Total amount of the invoice"
          },
          "currency": {
            "type": "string",
            "description": "Currency code for the invoice"
          },
          "created_at": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of invoice creation in milliseconds since epoch"
          },
          "hosted_invoice_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to view the hosted invoice page"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
